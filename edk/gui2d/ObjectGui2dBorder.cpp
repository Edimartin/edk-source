#include "ObjectGui2dBorder.h"

/*
ObjectBorder - Border used for the GUI 2D library
Copyright (C) 2013 Eduardo Moura Sales Martins
This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.
This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.
You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
email: edimartin@gmail.com.br

AV: Walmor M. de Souza 392 Casa
Gravatai RS Brazil 94065100
*/


static edk::uint32 EDKButtonNormalTemplateSize = 1800u;
static edk::char8 EDKButtonNormalTemplateName[28] = "EDKButtonNormalTemplate.png";
static edk::uchar8 EDKButtonNormalTemplate[1800] = {
    137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,50,0,0,0,50,8,6,0,0,0,30,63,136,177,0,0,0,4,115,66,73,84,8,8,8,8,124,8,100,136,0,0,0 \
    ,9,112,72,89,115,0,0,13,215,0,0,13,215,1,66,40,155,120,0,0,0,25,116,69,88,116,83,111,102,116,119,97,114,101,0,119,119,119,46,105,110,107,115,99,97,112,101,46,111,114,103 \
    ,155,238,60,26,0,0,6,133,73,68,65,84,104,129,205,90,77,76,27,71,20,126,94,227,31,161,4,2,166,138,192,18,106,155,72,205,173,151,40,135,158,218,43,149,146,84,105,19,36,14,136 \
    ,114,104,114,136,34,37,55,32,164,84,249,81,34,37,151,156,184,52,202,129,67,155,74,33,149,194,37,130,214,138,205,193,105,44,65,66,36,20,75,72,32,27,236,150,154,134,24,47,182,223,55 \
    ,61,216,235,172,215,51,182,1,99,24,105,228,245,190,217,157,239,219,247,205,223,155,177,9,33,168,22,41,20,10,53,3,232,18,66,28,7,208,14,160,195,244,75,0,162,0,150,77,191,127,9 \
    ,33,38,186,186,186,254,171,69,253,182,157,16,153,157,157,245,2,56,5,224,52,128,47,1,56,242,160,11,89,8,65,214,123,166,156,1,240,39,128,113,0,79,206,156,57,19,169,43,145,87,175 \
    ,94,117,2,184,14,160,7,128,86,1,108,181,196,0,96,76,8,49,212,221,221,189,184,171,68,230,230,230,14,1,24,0,112,17,128,123,27,96,171,41,171,3,184,15,224,102,111,111,239,90,205 \
    ,137,188,126,253,250,36,128,159,1,120,106,0,182,26,251,42,128,239,251,251,251,127,175,6,159,86,37,137,193,188,142,61,70,69,204,92,148,203,1,173,84,86,97,247,0,24,31,29,29,29,172 \
    ,6,99,89,143,204,205,205,53,2,120,0,224,236,86,188,96,125,167,249,57,102,166,108,54,75,153,76,102,43,30,253,21,64,223,197,139,23,55,182,76,36,79,226,15,0,39,42,73,130,153,11 \
    ,224,173,191,170,107,0,148,78,167,73,215,117,74,165,82,213,124,164,32,128,175,46,95,190,44,37,163,148,22,51,63,96,102,37,9,243,215,149,129,47,71,130,136,200,102,179,145,203,229,162,166 \
    ,166,38,106,105,105,33,187,221,94,73,170,39,0,60,188,115,231,142,173,106,34,179,179,179,131,134,156,84,250,54,174,43,1,174,198,238,116,58,169,173,173,141,90,90,90,138,188,44,169,247,91 \
    ,0,215,100,152,75,164,53,51,51,115,82,8,49,14,192,86,206,19,42,112,149,36,85,201,190,185,185,73,203,203,203,148,78,167,85,74,16,0,206,93,189,122,245,145,146,200,204,204,204,33,0 \
    ,97,115,239,100,109,228,229,72,212,138,16,51,211,210,210,18,165,82,41,21,153,4,128,79,71,70,70,10,227,76,145,180,144,27,236,60,50,15,24,217,154,118,34,41,149,221,110,183,147,215,235 \
    ,37,77,211,84,237,166,5,192,128,249,61,5,143,132,66,161,78,0,243,200,143,216,178,94,164,92,229,187,225,161,84,42,69,225,112,152,178,217,172,204,43,186,16,226,179,91,183,110,45,18,153 \
    ,60,130,220,220,201,45,243,66,173,26,245,86,237,110,183,155,58,58,58,84,242,114,51,243,117,163,172,77,8,65,47,94,188,240,2,88,20,66,104,178,135,108,54,91,73,69,187,217,70,172,247 \
    ,222,188,121,67,235,235,235,178,233,12,0,116,222,187,119,47,162,17,17,33,55,21,215,100,93,158,234,107,149,3,81,107,187,215,235,85,77,103,52,0,167,136,242,210,66,110,61,33,117,161,225 \
    ,141,122,74,202,106,111,106,106,162,131,7,15,170,134,130,211,68,68,182,64,32,208,12,224,111,228,23,69,102,215,105,154,70,154,166,21,189,188,158,146,50,95,175,172,172,208,252,252,188,76,94 \
    ,25,0,31,53,0,232,130,100,101,7,128,236,118,251,182,190,224,110,216,91,91,91,85,243,49,135,16,162,75,99,230,227,50,18,68,185,249,208,94,74,202,124,207,225,112,148,147,215,113,13,64 \
    ,187,172,145,155,123,170,122,2,46,103,111,110,110,86,77,42,219,27,240,33,202,81,34,171,253,32,41,115,114,58,157,170,49,165,163,129,153,219,101,35,185,234,229,123,73,168,12,17,181,71,172 \
    ,189,213,126,32,228,116,58,139,100,101,250,248,29,13,170,241,195,250,210,253,66,72,133,87,99,230,101,89,3,50,47,95,247,11,161,50,211,250,101,13,185,16,102,209,240,111,92,239,21,96,149 \
    ,93,215,117,213,202,49,218,128,92,28,182,132,101,54,155,221,51,192,42,251,198,198,134,170,25,44,23,164,101,53,234,186,190,103,128,85,246,120,60,174,138,139,45,55,0,120,169,242,8,51,23 \
    ,122,175,189,38,148,78,167,41,22,139,201,122,44,2,240,82,3,240,20,64,86,194,146,146,201,100,221,1,171,236,209,104,180,36,138,147,207,89,102,126,170,117,119,119,175,49,179,79,230,178,245 \
    ,245,245,125,33,41,34,162,133,133,5,85,143,229,155,152,152,88,51,214,35,79,44,44,137,153,233,253,251,247,180,177,177,81,87,192,50,123,60,30,167,72,36,162,234,177,158,16,125,88,88,141 \
    ,35,151,74,228,21,139,197,234,6,88,101,15,133,66,170,89,47,152,121,188,64,164,175,175,111,137,153,199,100,242,74,38,147,148,72,36,234,2,88,102,95,88,88,160,88,44,166,154,245,142,61 \
    ,123,246,108,169,64,132,136,8,192,16,0,93,230,62,35,88,86,111,73,37,18,9,154,158,158,46,81,73,62,235,204,60,100,148,45,16,57,127,254,252,34,114,59,69,37,15,102,50,25,122,251 \
    ,246,173,116,144,220,45,66,186,174,211,228,228,36,109,110,110,170,26,249,253,169,169,169,194,22,93,209,32,193,204,55,153,249,95,217,131,186,174,211,252,252,60,165,211,233,154,2,150,217,13,18 \
    ,239,222,189,179,122,193,80,73,2,192,77,243,115,37,65,236,187,119,239,158,2,240,24,166,32,182,121,240,113,56,28,116,236,216,49,106,108,108,44,11,78,5,184,146,125,117,117,149,38,39,39 \
    ,11,113,44,73,22,0,206,249,124,62,117,16,219,72,183,111,223,30,68,46,242,40,159,50,107,26,29,57,114,132,14,31,62,188,109,192,50,123,56,28,166,233,233,105,105,36,222,244,49,71,124 \
    ,62,223,143,86,204,202,29,171,27,55,110,252,130,252,30,137,42,31,56,112,128,142,30,61,90,216,215,216,46,161,88,44,70,193,96,144,226,241,184,117,234,97,205,191,1,56,235,247,251,75,64 \
    ,55,72,89,16,17,51,247,1,248,24,249,173,55,89,5,107,107,107,20,12,6,201,227,241,144,215,235,165,182,182,182,66,8,201,10,216,122,47,147,201,80,36,18,161,112,56,76,139,139,139,170 \
    ,89,173,249,127,16,64,175,140,4,81,133,205,208,225,225,225,70,0,15,145,219,41,42,87,9,1,185,117,190,199,227,161,214,214,86,114,185,92,228,114,185,200,237,118,147,16,130,82,169,20,165 \
    ,82,41,74,38,147,180,178,178,66,209,104,180,16,101,175,224,5,195,19,189,129,64,96,235,155,161,70,26,24,24,176,1,184,6,96,24,101,118,177,170,0,83,85,25,75,57,1,224,39,0,35 \
    ,129,64,160,44,208,170,15,12,92,185,114,229,59,33,196,40,114,155,44,59,6,93,5,169,4,128,31,252,126,255,163,202,232,182,120,132,227,210,165,75,69,71,56,182,241,133,171,41,83,56,194 \
    ,225,247,251,107,127,132,195,156,46,92,184,208,9,211,161,154,26,121,1,0,198,0,12,61,127,254,124,119,15,213,88,83,127,127,255,39,0,190,65,110,91,226,11,0,246,45,122,129,1,76,35 \
    ,55,251,126,236,243,249,22,182,139,101,71,68,204,169,167,167,167,13,192,215,0,62,7,224,53,178,16,194,124,240,44,98,202,51,0,158,78,77,77,253,83,139,250,255,7,202,78,33,226,225,250 \
    ,198,18,0,0,0,0,73,69,78,68,174,66,96,130
};
static edk::uint32 EDKButtonUpTemplateSize = 1946u;
static edk::char8 EDKButtonUpTemplateName[24] = "EDKButtonUpTemplate.png";
static edk::uchar8 EDKButtonUpTemplate[1946] = {
    137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,50,0,0,0,50,8,6,0,0,0,30,63,136,177,0,0,0,4,115,66,73,84,8,8,8,8,124,8,100,136,0,0,0 \
    ,9,112,72,89,115,0,0,13,215,0,0,13,215,1,66,40,155,120,0,0,0,25,116,69,88,116,83,111,102,116,119,97,114,101,0,119,119,119,46,105,110,107,115,99,97,112,101,46,111,114,103 \
    ,155,238,60,26,0,0,7,23,73,68,65,84,104,129,197,90,75,76,83,89,24,254,251,184,125,154,194,72,27,45,5,51,195,66,87,202,66,226,98,22,102,102,203,36,234,196,25,37,97,65,24 \
    ,22,163,11,99,130,137,11,68,28,38,62,226,194,149,43,54,51,153,133,137,140,38,226,40,110,72,112,42,173,11,117,32,45,197,100,12,98,40,10,105,80,218,98,193,62,56,223,153,69,31,222 \
    ,150,123,202,109,185,48,39,57,57,112,123,206,127,254,239,255,254,255,188,117,156,115,210,34,141,143,143,215,0,104,229,156,183,0,112,3,168,151,149,4,96,30,192,130,172,124,193,57,127,212,218 \
    ,218,26,215,162,127,221,102,128,4,131,65,15,128,163,0,142,1,248,6,128,148,83,186,144,57,231,84,250,77,150,51,0,254,6,48,4,224,254,241,227,199,223,109,43,144,201,201,201,61,0,46 \
    ,3,104,7,160,223,64,89,181,192,0,224,22,231,188,183,173,173,45,188,165,64,166,166,166,106,1,244,0,56,3,192,82,133,178,106,234,38,1,220,4,112,181,163,163,35,166,57,144,80,40,116 \
    ,4,192,111,0,234,52,80,86,205,239,31,0,252,212,213,213,245,151,26,253,244,42,65,92,200,249,113,93,190,35,198,88,81,46,167,232,70,117,5,191,215,1,24,26,24,24,184,160,70,199,178 \
    ,140,76,77,77,217,0,252,14,224,132,90,22,204,102,51,89,44,22,50,26,141,100,48,24,200,104,52,18,231,156,50,153,12,165,211,105,74,165,82,180,188,188,76,137,68,98,67,3,200,24,251 \
    ,19,64,231,153,51,103,86,43,6,146,3,241,24,192,161,141,92,194,108,54,147,221,110,39,187,221,78,122,125,150,228,188,92,81,153,201,100,40,22,139,209,251,247,239,233,195,135,15,106,140,244 \
    ,12,192,183,221,221,221,138,96,132,64,130,193,224,32,128,19,229,58,144,36,137,118,238,220,73,86,171,149,56,231,27,42,47,42,227,241,56,205,204,204,80,60,30,223,40,110,238,2,56,113,254 \
    ,252,249,117,74,43,198,72,48,24,188,144,119,39,37,255,229,156,147,211,233,36,143,199,83,0,81,154,42,1,227,112,56,168,185,185,153,246,237,219,71,58,157,174,92,220,252,0,224,146,42,70 \
    ,2,129,192,17,206,249,16,0,157,18,11,122,189,158,118,237,218,69,38,147,73,181,162,149,128,74,36,18,52,49,49,65,171,171,171,34,79,224,0,78,94,188,120,241,142,16,72,32,16,168,5 \
    ,48,45,31,157,228,52,75,146,68,187,119,239,86,29,7,213,130,74,167,211,244,226,197,11,138,197,98,34,48,81,0,77,253,253,253,133,121,166,200,181,144,157,236,234,74,27,50,198,72,167,211 \
    ,109,26,68,105,18,213,145,36,137,14,30,60,72,38,147,73,52,108,127,1,160,71,145,145,241,241,241,61,0,254,69,110,198,150,7,27,231,156,60,30,15,153,205,230,170,93,166,26,198,226,241 \
    ,56,141,141,141,81,38,147,81,98,37,201,57,223,119,237,218,181,112,17,35,200,174,157,44,114,22,242,217,233,116,174,3,161,214,186,155,97,204,225,112,208,129,3,7,68,238,101,97,140,93,206 \
    ,215,213,19,17,61,127,254,220,195,24,107,87,106,96,50,153,200,225,112,104,226,50,213,128,106,108,108,36,135,195,33,90,21,180,119,119,119,123,10,64,144,93,138,235,149,134,60,167,211,185,41 \
    ,171,106,1,110,255,254,253,162,229,140,30,192,81,57,144,99,74,108,88,44,22,178,90,173,154,89,183,90,80,46,151,139,92,46,151,104,29,119,140,136,72,231,247,251,107,0,44,34,183,41,146 \
    ,7,185,219,237,166,154,154,154,130,208,173,14,238,114,229,244,244,52,61,125,250,84,105,214,207,0,112,25,1,180,66,176,179,219,177,99,135,208,170,213,90,183,90,166,26,26,26,74,1,228,179 \
    ,196,57,111,213,51,198,90,68,110,101,48,24,182,53,200,203,201,50,153,76,229,220,171,69,15,192,173,20,228,54,155,109,91,227,64,141,44,151,203,37,26,189,220,70,124,62,229,40,202,6,131 \
    ,97,203,172,91,173,44,155,205,38,154,83,234,141,140,49,183,66,0,145,36,73,91,106,221,106,74,171,213,42,2,34,102,36,191,179,219,42,235,86,211,214,106,181,22,185,149,204,248,245,70,1 \
    ,194,109,143,3,53,50,5,163,86,118,123,193,24,91,80,10,160,116,58,189,173,113,160,70,102,34,145,16,1,89,208,35,123,132,89,52,253,3,160,84,42,165,153,2,90,129,90,89,89,17,237 \
    ,28,231,141,200,158,195,174,67,153,76,38,183,205,101,212,202,20,49,194,57,95,40,184,86,233,143,177,88,108,75,173,91,77,57,55,55,39,58,23,91,48,2,248,71,9,101,52,26,165,76,38 \
    ,67,70,163,81,51,171,110,6,212,167,79,159,40,28,14,43,141,88,4,224,31,61,128,97,0,107,165,64,214,214,214,104,113,113,81,168,128,86,224,212,202,122,253,250,53,173,173,173,41,45,231 \
    ,215,24,99,195,250,182,182,182,24,99,204,171,68,217,252,252,252,182,6,121,57,89,161,80,72,52,98,121,31,61,122,20,203,239,71,238,151,160,36,198,24,45,46,46,210,210,210,210,255,50,114 \
    ,201,83,56,28,166,153,153,25,209,136,117,159,232,243,198,106,8,217,84,26,68,244,242,229,75,205,173,91,105,249,248,241,99,209,170,23,140,177,161,2,144,206,206,206,57,198,216,45,37,247,90 \
    ,90,90,162,185,185,57,205,172,91,105,219,80,40,84,24,173,20,244,187,53,50,50,50,87,0,146,99,165,23,64,82,137,190,137,137,9,138,199,227,154,88,183,18,80,145,72,132,134,135,135,215 \
    ,121,73,46,39,25,99,189,121,89,5,32,167,78,157,10,35,123,83,180,174,97,58,157,38,159,207,87,152,237,171,181,110,37,19,231,202,202,10,13,14,14,82,50,153,20,5,249,205,209,209,209 \
    ,194,21,93,209,73,35,99,236,42,99,108,73,169,97,34,145,160,39,79,158,80,42,149,218,146,56,144,203,92,93,93,165,193,193,65,138,70,163,165,44,228,189,36,10,224,170,188,255,117,135,216 \
    ,55,110,220,56,10,224,30,100,135,216,242,201,199,106,181,210,225,195,135,169,182,182,86,168,208,102,192,68,34,17,186,125,251,118,185,115,95,14,224,164,215,235,21,31,98,231,211,245,235,215,47 \
    ,32,123,242,168,40,204,96,48,208,161,67,135,168,169,169,73,181,130,106,234,76,78,78,210,195,135,15,41,149,74,41,110,43,114,127,247,123,189,222,95,74,117,22,94,244,92,185,114,101,16,185 \
    ,59,18,81,174,171,171,163,150,150,22,114,187,221,21,89,189,244,219,236,236,44,141,140,140,208,219,183,111,139,216,87,200,119,1,156,240,249,124,235,148,54,150,126,200,39,198,88,39,128,47,145 \
    ,187,122,83,234,32,18,137,208,131,7,15,168,161,161,129,246,238,221,75,141,141,141,36,73,146,170,56,72,167,211,52,61,61,77,129,64,128,94,189,122,37,90,213,202,255,127,6,160,67,9,68 \
    ,89,70,136,136,250,250,250,108,0,254,64,246,166,168,92,39,4,128,116,58,29,213,215,215,147,219,237,38,187,221,78,54,155,141,108,54,27,17,17,125,252,248,145,18,137,4,45,47,47,211,236 \
    ,236,44,189,121,243,166,112,202,190,1,11,121,38,58,252,126,127,229,151,161,249,212,211,211,163,3,112,9,64,31,4,183,88,42,149,81,85,167,164,30,7,240,43,128,126,191,223,95,86,81,213 \
    ,15,6,206,157,59,247,35,231,124,0,217,75,150,77,43,173,2,84,20,192,207,62,159,239,206,198,218,85,248,132,227,236,217,179,69,79,56,170,176,176,154,58,133,39,28,62,159,79,251,39,28 \
    ,242,116,250,244,233,61,144,61,170,209,136,5,0,184,5,160,119,108,108,108,107,31,213,148,166,174,174,174,175,0,124,143,236,181,196,215,0,12,21,178,192,0,60,69,118,245,125,207,235,245,190 \
    ,169,86,151,77,1,145,167,246,246,118,39,128,239,0,52,3,240,228,51,231,92,254,240,236,157,44,7,0,12,143,142,142,190,215,162,255,255,0,140,59,210,17,253,178,76,235,0,0,0,0,73 \
    ,69,78,68,174,66,96,130
};
static edk::uint32 EDKButtonPressedTemplateSize = 1799u;
static edk::char8 EDKButtonPressedTemplateName[29] = "EDKButtonPressedTemplate.png";
static edk::uchar8 EDKButtonPressedTemplate[1799] = {
    137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,50,0,0,0,50,8,6,0,0,0,30,63,136,177,0,0,0,4,115,66,73,84,8,8,8,8,124,8,100,136,0,0,0 \
    ,9,112,72,89,115,0,0,13,215,0,0,13,215,1,66,40,155,120,0,0,0,25,116,69,88,116,83,111,102,116,119,97,114,101,0,119,119,119,46,105,110,107,115,99,97,112,101,46,111,114,103 \
    ,155,238,60,26,0,0,6,132,73,68,65,84,104,129,197,154,93,104,84,103,26,199,159,243,255,159,147,140,103,62,82,19,11,153,201,76,140,155,104,4,137,19,101,140,164,168,236,222,168,88,168 \
    ,45,116,237,69,47,74,247,102,81,88,244,194,11,49,113,187,89,68,208,11,189,16,145,130,182,4,17,113,83,104,92,72,47,188,233,246,102,47,74,123,209,27,161,18,84,12,73,16,163,19,81 \
    ,51,39,243,113,102,47,230,99,39,147,247,157,204,196,100,230,133,135,23,134,153,51,255,223,121,62,222,79,35,155,205,202,90,180,173,91,183,182,144,60,2,32,70,50,8,32,84,210,11,128,25 \
    ,146,179,37,253,47,36,127,184,127,255,254,171,181,248,127,227,93,64,186,186,186,58,72,30,5,240,49,201,63,2,176,242,162,165,202,62,69,242,63,0,198,73,222,27,31,31,159,174,43,72,103 \
    ,103,103,39,201,243,0,62,39,137,74,130,107,128,114,73,222,6,48,124,247,238,221,167,235,10,18,14,135,223,3,112,150,228,223,0,120,106,124,251,213,194,58,0,174,146,188,48,58,58,58,191 \
    ,230,32,225,112,248,35,146,223,0,104,91,11,241,85,120,238,5,201,191,220,184,113,227,223,213,232,67,149,16,67,36,199,1,180,145,148,106,172,86,24,197,103,109,0,198,143,31,63,62,84,141 \
    ,198,138,30,9,133,66,54,128,111,73,30,171,86,144,235,186,226,186,174,100,179,217,162,25,134,33,166,105,138,101,89,98,89,150,108,216,176,65,108,219,174,5,246,95,36,191,188,114,229,202,66 \
    ,205,32,161,80,200,38,249,35,128,129,149,194,192,117,93,201,100,50,146,78,167,115,15,53,140,21,141,164,120,189,94,9,4,2,18,8,4,170,129,249,153,228,159,46,93,186,164,132,209,134,22 \
    ,201,111,85,16,165,225,35,34,226,56,142,36,18,9,73,165,82,90,8,85,115,93,87,222,188,121,35,179,179,179,50,53,53,37,201,100,114,37,152,1,0,163,67,67,67,202,7,42,65,34,145 \
    ,200,16,128,99,149,18,51,153,76,74,34,145,144,76,38,83,81,112,53,30,114,28,71,158,60,121,34,51,51,51,69,111,105,114,238,83,0,95,41,255,163,60,180,34,145,200,71,249,196,54,84 \
    ,0,0,196,113,28,113,93,183,170,16,170,213,108,219,150,158,158,30,241,120,60,58,239,100,73,126,118,238,220,185,49,45,72,36,18,121,143,228,100,161,58,149,63,36,155,205,138,227,56,85,189 \
    ,229,119,49,203,178,164,183,183,87,252,126,191,14,38,78,242,15,103,206,156,41,142,51,75,66,139,228,89,29,132,136,212,5,194,48,12,201,100,50,50,57,57,41,233,116,90,151,47,27,1,156 \
    ,85,122,164,171,171,171,147,228,239,170,17,187,16,199,235,21,78,58,243,249,124,18,141,70,197,178,44,21,144,67,178,247,212,169,83,79,151,120,36,63,119,82,78,59,82,169,84,221,33,12,195 \
    ,144,133,133,5,121,244,232,145,206,43,30,0,231,151,132,86,119,119,119,71,126,2,168,204,139,84,42,85,119,136,130,61,127,254,92,22,22,22,116,48,159,95,191,126,189,163,8,66,242,40,73 \
    ,168,74,222,226,226,98,195,32,10,246,248,241,99,93,73,6,201,163,69,16,228,214,19,74,111,148,142,19,245,182,66,139,199,227,242,234,213,43,221,192,252,177,136,136,209,219,219,219,66,242,57 \
    ,20,139,162,68,34,33,201,100,178,46,130,87,250,78,56,28,150,104,52,170,91,156,189,111,146,60,66,210,82,205,165,214,58,55,116,173,218,92,209,228,137,5,224,8,72,198,84,46,115,93,119 \
    ,213,99,198,187,8,214,89,58,157,150,249,249,121,221,178,33,6,0,65,85,126,164,211,233,134,8,174,100,241,120,92,231,149,160,73,50,84,30,82,0,150,8,170,183,96,157,37,147,73,221,148 \
    ,37,100,50,183,101,179,236,11,133,208,106,132,96,157,45,46,46,42,103,226,121,134,226,190,211,178,210,219,104,225,42,143,104,22,120,33,83,183,230,104,180,104,157,105,215,72,36,103,85,149,192 \
    ,178,172,134,139,46,55,219,182,117,27,21,179,64,110,11,115,25,165,105,154,13,23,174,2,81,237,25,0,152,49,243,52,203,40,155,154,154,26,46,188,96,133,86,240,136,66,239,172,54,180,108 \
    ,219,110,152,96,93,153,111,111,111,215,141,35,179,0,240,171,138,210,235,245,174,91,120,173,102,92,106,110,110,150,96,48,168,243,200,175,32,57,1,32,93,254,5,211,52,197,239,247,215,93,176 \
    ,206,58,59,59,197,52,77,213,244,36,77,114,2,19,19,19,243,36,127,82,85,131,141,27,55,214,93,176,206,186,187,187,117,222,248,105,223,190,125,243,133,133,213,61,85,53,8,4,2,226,243 \
    ,249,234,42,88,101,193,96,80,34,145,136,46,63,238,137,252,127,97,53,78,210,85,37,125,71,71,71,221,4,235,108,207,158,61,186,89,175,75,114,188,8,50,54,54,54,5,224,182,202,117,126 \
    ,191,95,54,109,218,212,48,136,158,158,158,74,213,234,246,192,192,192,84,17,36,31,94,195,249,45,150,101,63,218,178,101,139,120,189,222,186,67,180,181,181,201,254,253,251,117,16,14,128,225,130 \
    ,254,34,200,173,91,183,158,146,188,90,238,62,0,98,89,150,108,223,190,189,174,131,164,199,227,145,131,7,15,74,115,115,179,46,172,174,198,98,177,167,203,64,242,94,185,0,224,101,41,125,233 \
    ,0,185,99,199,142,186,192,120,60,30,57,116,232,144,180,180,180,232,188,17,7,112,97,73,193,41,223,196,62,113,226,196,81,0,223,147,52,84,15,73,165,82,242,224,193,3,121,251,246,237,186 \
    ,64,180,182,182,202,225,195,135,43,157,153,100,1,124,182,107,215,46,253,38,118,161,157,60,121,114,8,192,121,221,148,89,68,228,225,195,135,242,236,217,179,53,79,236,3,7,14,72,83,83,147 \
    ,118,186,78,114,164,191,191,255,31,203,134,0,221,137,213,233,211,167,239,114,133,35,183,215,175,95,203,228,228,164,196,227,241,85,9,47,148,244,96,48,40,123,247,238,173,84,157,10,253,119,0 \
    ,142,237,220,185,115,153,104,83,73,145,203,151,47,1,116,49,119,82,164,124,120,107,107,171,12,14,14,202,220,220,156,76,79,79,203,220,220,156,114,67,79,213,44,203,146,72,36,34,219,182,109 \
    ,147,205,155,55,235,86,126,165,253,207,0,190,80,65,84,244,136,136,200,240,240,176,13,96,148,185,147,162,74,111,170,184,170,124,241,226,133,188,124,249,82,28,199,145,100,50,41,142,227,8,0 \
    ,177,109,91,108,219,22,159,207,39,237,237,237,18,14,135,139,115,167,42,158,253,29,201,47,250,250,250,106,63,12,45,180,145,145,17,131,228,87,0,254,94,40,0,213,64,149,247,171,249,77,62 \
    ,177,255,73,114,164,175,175,175,162,208,170,47,12,92,188,120,241,207,0,190,102,238,144,101,93,132,43,74,236,95,251,251,251,199,86,86,87,227,21,142,203,151,47,215,116,133,99,149,94,40,94 \
    ,225,136,70,163,107,127,133,163,180,93,187,118,109,93,47,213,236,222,189,123,125,47,213,148,183,155,55,111,110,33,249,9,114,199,18,31,0,96,141,111,63,3,224,191,200,205,190,191,143,197,98 \
    ,143,87,171,229,157,64,74,219,157,59,119,54,145,252,16,64,20,64,7,201,142,124,31,202,139,158,1,48,77,114,58,223,255,6,96,98,112,112,112,110,45,254,255,127,97,220,7,96,118,224,98 \
    ,156,0,0,0,0,73,69,78,68,174,66,96,130
};

static edk::uint32 EDKButtonPressedUpTemplateSize = 1768u;
static edk::char8 EDKButtonPressedUpTemplateName[31] = "EDKButtonPressedUpTemplate.png";
static edk::uchar8 EDKButtonPressedUpTemplate[1768] = {
137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,50,0,0,0,50,8,6,0,0,0,30,63,136,177,0,0,0,6,98,75,71,68,0,255,0,255,0,255,160,189,167,147,0 \
,0,0,9,112,72,89,115,0,0,11,19,0,0,11,19,1,0,154,156,24,0,0,0,7,116,73,77,69,7,226,11,26,19,26,15,225,222,108,160,0,0,6,117,73,68,65,84,104,222,205,154 \
,93,104,20,87,20,199,207,252,255,243,149,221,141,73,204,174,102,179,27,215,138,18,16,137,154,152,168,1,237,135,111,22,212,66,107,11,125,16,251,82,16,250,32,62,153,72,181,34,34,136,32 \
,40,133,138,86,20,21,106,3,53,5,125,241,193,74,161,15,18,3,125,17,132,66,33,162,17,211,26,179,126,108,62,102,55,125,153,221,206,198,185,235,108,220,77,188,112,185,236,206,236,236,249 \
,221,115,230,158,115,207,185,154,84,168,45,95,190,188,142,228,86,0,235,72,198,1,52,123,70,1,240,136,228,176,103,28,32,121,227,230,205,155,99,149,248,127,237,109,126,156,74,165,18,36,183 \
,3,216,65,242,3,0,134,43,180,4,28,167,72,254,6,224,26,201,254,254,254,254,135,115,10,210,210,210,178,132,228,17,0,95,146,68,41,129,203,128,202,145,188,12,224,192,213,171,87,135,170 \
,10,146,72,36,234,1,244,144,252,6,128,93,230,236,7,133,29,7,112,138,228,209,139,23,47,62,171,56,72,34,145,216,70,242,71,0,141,149,16,62,128,230,254,37,249,213,185,115,231,126,13 \
,34,31,3,66,244,146,60,3,32,68,82,130,244,114,97,124,190,11,1,248,162,171,171,203,25,24,24,248,253,173,52,18,143,199,67,0,206,147,220,25,68,32,219,182,69,215,245,130,96,154,166 \
,21,122,126,214,53,77,19,93,215,69,215,117,201,229,114,65,97,175,146,220,125,242,228,201,87,101,131,196,227,241,16,201,91,0,186,74,153,129,174,235,98,219,182,88,150,245,255,67,61,0,222 \
,238,189,70,82,76,211,20,195,48,196,48,140,194,119,37,96,238,144,252,240,248,241,227,190,48,80,218,28,121,222,15,194,107,62,225,112,88,22,44,88,32,166,105,202,244,244,180,18,194,175,229 \
,114,57,153,152,152,144,151,47,95,74,38,147,9,162,153,46,0,23,122,122,122,180,192,32,201,100,178,23,192,78,213,67,45,203,146,218,218,90,49,77,179,72,11,74,181,207,208,198,204,62,53 \
,53,37,163,163,163,242,234,213,43,49,12,163,212,59,247,41,128,131,129,94,246,100,50,185,141,228,25,146,154,223,195,194,225,176,132,195,225,34,193,74,9,25,228,122,254,158,108,54,43,142,227 \
,72,36,18,81,90,1,201,247,183,108,217,114,239,214,173,91,247,148,239,72,50,153,172,39,249,23,128,70,63,109,212,212,212,136,109,219,85,129,240,126,214,117,93,154,154,154,196,52,77,149,169 \
,141,146,92,182,127,255,254,103,190,166,69,178,103,190,33,52,77,147,92,46,39,35,35,35,165,34,131,6,0,61,190,26,73,165,82,75,72,222,247,243,216,166,105,74,109,109,173,228,114,185,170 \
,67,120,123,40,20,146,150,150,22,21,208,56,201,214,189,123,247,14,21,105,196,141,157,108,149,54,230,26,66,68,36,147,201,200,147,39,79,84,90,177,1,28,41,210,200,178,101,203,18,0,134 \
,252,2,192,80,40,36,186,174,207,57,132,247,243,138,21,43,196,182,109,63,152,28,128,37,123,246,236,121,8,87,27,219,73,194,111,217,203,59,171,249,130,208,52,77,70,70,70,138,34,6,207 \
,42,10,146,219,11,166,229,238,39,124,77,42,136,31,168,22,68,190,165,211,105,201,100,50,170,37,121,135,136,136,214,218,218,90,71,114,196,111,83,20,137,68,74,122,236,74,65,4,153,172,88 \
,44,38,75,151,46,85,109,206,98,58,201,173,36,141,153,177,148,109,219,21,135,152,173,231,215,52,77,198,198,198,196,48,12,113,45,200,11,99,0,216,10,146,235,252,84,166,235,250,172,33,74 \
,9,60,91,147,115,28,71,94,188,120,161,218,54,172,3,128,184,223,251,17,100,150,131,8,252,182,26,245,94,127,254,252,185,106,41,142,131,100,179,223,198,102,230,146,91,206,12,87,3,66,211 \
,52,201,102,179,170,144,165,89,119,83,54,175,221,80,74,224,249,128,208,52,77,28,199,81,109,145,227,240,228,157,2,153,214,124,65,228,65,20,27,188,102,93,181,231,120,215,32,188,59,75,223 \
,228,5,201,97,85,2,225,93,131,176,44,75,149,168,24,134,155,194,44,105,90,239,2,68,30,68,17,9,63,210,93,26,165,105,189,11,16,249,150,215,136,143,188,195,74,211,202,123,209,185,132 \
,120,147,231,143,70,163,42,63,50,12,0,119,253,40,13,195,40,242,37,149,132,152,141,231,183,44,75,98,177,152,74,35,119,65,242,58,0,199,207,143,88,150,245,214,230,80,74,224,114,52,190 \
,120,241,98,191,68,132,144,116,72,94,199,141,27,55,158,145,188,237,183,26,216,182,93,86,184,93,142,231,47,215,108,147,201,164,74,27,183,55,109,218,244,44,191,177,234,247,91,13,76,211,148 \
,154,154,154,178,5,174,52,68,44,22,43,210,200,140,177,223,187,177,186,70,50,231,151,199,170,171,171,43,43,220,174,198,222,101,229,202,149,170,168,55,71,242,90,1,164,175,175,239,1,128,203 \
,126,170,211,117,93,34,145,200,188,65,36,147,73,105,108,108,84,105,227,242,250,245,235,31,204,204,162,28,112,83,44,175,253,40,26,141,22,153,216,92,65,52,52,52,72,71,71,135,10,98,28 \
,192,129,215,18,116,151,46,93,26,34,121,202,207,188,0,20,50,127,115,5,97,89,150,108,216,176,65,153,11,38,121,170,179,179,115,72,149,105,60,10,224,169,95,206,85,215,117,73,36,18,69 \
,89,149,106,67,132,195,97,149,54,70,1,28,85,38,177,7,7,7,199,187,186,186,238,3,248,156,164,230,231,36,23,46,92,40,227,227,227,226,56,78,85,32,234,235,235,101,243,230,205,82,95 \
,95,175,130,152,6,176,171,189,189,125,176,100,54,126,96,96,224,254,198,141,27,29,0,31,169,106,35,141,141,141,226,56,142,76,76,76,84,252,197,238,238,238,46,36,227,20,253,112,123,123,251 \
,247,129,43,86,251,246,237,251,233,77,37,183,201,201,73,121,252,248,177,164,211,233,89,65,228,239,139,197,98,178,106,213,170,82,171,83,126,236,3,176,115,245,234,213,211,51,229,213,75,84,172 \
,118,3,88,234,86,138,124,31,30,14,135,165,181,181,85,210,233,180,60,125,250,84,198,198,198,36,155,205,6,10,87,12,195,144,69,139,22,73,42,149,146,120,60,30,164,54,127,7,192,46,63 \
,136,55,22,67,123,123,123,67,0,46,184,149,162,64,133,203,116,58,45,233,116,90,28,199,17,199,113,100,114,114,178,16,238,88,150,37,182,109,75,52,26,149,166,166,166,114,42,191,125,36,119 \
,181,181,181,149,95,12,205,183,67,135,14,105,36,15,2,248,54,191,0,84,168,142,30,100,156,6,112,152,228,119,109,109,109,211,21,57,48,112,236,216,177,207,0,252,224,22,89,170,34,184,207 \
,18,251,245,218,181,107,127,174,248,17,142,19,39,78,148,117,132,99,150,90,40,28,225,88,179,102,77,229,143,112,120,219,233,211,167,171,122,168,166,163,163,163,186,135,106,102,182,179,103,207,190 \
,71,242,19,183,44,209,13,128,101,206,126,22,192,31,110,244,253,75,103,103,231,223,243,114,94,203,219,174,92,185,18,37,249,49,128,213,0,18,36,19,238,216,236,10,253,8,192,67,146,15,221 \
,241,79,0,215,187,187,187,255,169,196,255,255,7,127,152,121,58,97,24,143,85,0,0,0,0,73,69,78,68,174,66,96,130
};

edk::gui2d::ObjectGui2dBorder::ObjectGui2dBorder(){
    //
    this->setBorderSize(0.1f);
}
edk::gui2d::ObjectGui2dBorder::~ObjectGui2dBorder(){
    //
}

//LOAD SPRITES
bool edk::gui2d::ObjectGui2dBorder::loadSpriteNormal(const char* name,edk::uint32 filter){
    return this->loadSpriteNormal((edk::char8*) name,filter);
}
bool edk::gui2d::ObjectGui2dBorder::loadSpriteNormal(edk::char8* name,edk::uint32 filter){
    return this->mesh.material.loadTexture(name,edk::gui2d::gui2dTextureNormal,filter);
}
bool edk::gui2d::ObjectGui2dBorder::loadSpriteNormalFromMemory(const char* name,edk::uint8* sprite,edk::uint32 size,edk::uint32 filter){
    return this->loadSpriteNormalFromMemory((edk::char8*) name,sprite,size,filter);
}
bool edk::gui2d::ObjectGui2dBorder::loadSpriteNormalFromMemory(edk::char8* name,edk::uint8* sprite,edk::uint32 size,edk::uint32 filter){
    return this->mesh.material.loadTextureFromMemory(name,sprite,size,edk::gui2d::gui2dTextureNormal,filter);
}
void edk::gui2d::ObjectGui2dBorder::removeSpriteNormal(){
    this->mesh.material.removeTexture(edk::gui2d::gui2dTextureNormal);
}
//load pressed sprite
bool edk::gui2d::ObjectGui2dBorder::loadSpritePressed(const char* name,edk::uint32 filter){
    return this->loadSpritePressed((edk::char8*) name,filter);
}
bool edk::gui2d::ObjectGui2dBorder::loadSpritePressed(edk::char8* name,edk::uint32 filter){
    return this->mesh.material.loadTexture(name,edk::gui2d::gui2dTexturePressed,filter);
}
bool edk::gui2d::ObjectGui2dBorder::loadSpritePressedFromMemory(const char* name,edk::uint8* sprite,edk::uint32 size,edk::uint32 filter){
    return this->loadSpritePressedFromMemory((edk::char8*) name,sprite,size,filter);
}
bool edk::gui2d::ObjectGui2dBorder::loadSpritePressedFromMemory(edk::char8* name,edk::uint8* sprite,edk::uint32 size,edk::uint32 filter){
    return this->mesh.material.loadTextureFromMemory(name,sprite,size,edk::gui2d::gui2dTexturePressed,filter);
}
void edk::gui2d::ObjectGui2dBorder::removeSpritePressed(){
    this->mesh.material.removeTexture(edk::gui2d::gui2dTexturePressed);
}
//load UP sprite
bool edk::gui2d::ObjectGui2dBorder::loadSpriteUp(const char* name,edk::uint32 filter){
    return this->loadSpriteUp((edk::char8*) name,filter);
}
bool edk::gui2d::ObjectGui2dBorder::loadSpriteUp(edk::char8* name,edk::uint32 filter){
    return this->mesh.material.loadTexture(name,edk::gui2d::gui2dTextureUp,filter);
}
bool edk::gui2d::ObjectGui2dBorder::loadSpriteUpFromMemory(const char* name,edk::uint8* sprite,edk::uint32 size,edk::uint32 filter){
    return this->loadSpriteUpFromMemory((edk::char8*) name,sprite,size,filter);
}
bool edk::gui2d::ObjectGui2dBorder::loadSpriteUpFromMemory(edk::char8* name,edk::uint8* sprite,edk::uint32 size,edk::uint32 filter){
    return this->mesh.material.loadTextureFromMemory(name,sprite,size,edk::gui2d::gui2dTextureUp,filter);
}
void edk::gui2d::ObjectGui2dBorder::removeSpriteUp(){
    this->mesh.material.removeTexture(edk::gui2d::gui2dTextureUp);
}
//load pressedUp sprite
bool edk::gui2d::ObjectGui2dBorder::loadSpritePressedUp(const char* name,edk::uint32 filter){
    return this->loadSpritePressedUp((edk::char8*) name,filter);
}
bool edk::gui2d::ObjectGui2dBorder::loadSpritePressedUp(edk::char8* name,edk::uint32 filter){
    return this->mesh.material.loadTexture(name,edk::gui2d::gui2dTexturePressedUp,filter);
}
bool edk::gui2d::ObjectGui2dBorder::loadSpritePressedUpFromMemory(const char* name,edk::uint8* sprite,edk::uint32 size,edk::uint32 filter){
    return this->loadSpritePressedUpFromMemory((edk::char8*) name,sprite,size,filter);
}
bool edk::gui2d::ObjectGui2dBorder::loadSpritePressedUpFromMemory(edk::char8* name,edk::uint8* sprite,edk::uint32 size,edk::uint32 filter){
    return this->mesh.material.loadTextureFromMemory(name,sprite,size,edk::gui2d::gui2dTexturePressedUp,filter);
}
void edk::gui2d::ObjectGui2dBorder::removeSpritePressedUp(){
    this->mesh.material.removeTexture(edk::gui2d::gui2dTexturePressedUp);
}

//set the color
void edk::gui2d::ObjectGui2dBorder::setColor(edk::float32 r,edk::float32 g,edk::float32 b,edk::float32 a){
    this->mesh.material.setEmission(r,g,b,a);
}
void edk::gui2d::ObjectGui2dBorder::setColor(edk::float32 r,edk::float32 g,edk::float32 b){
    this->mesh.material.setEmission(r,g,b);
}
void edk::gui2d::ObjectGui2dBorder::setColor(edk::color4f32 color){
    this->mesh.material.setEmission(color);
}
void edk::gui2d::ObjectGui2dBorder::setColor(edk::color3f32 color){
    this->mesh.material.setEmission(color);
}

//load the polygons
bool edk::gui2d::ObjectGui2dBorder::updatePolygons(edk::size2f32 size){
    //load the mesh
    edk::shape::Polygon2D poly;
    this->mesh.cleanPolygons();
    if(poly.createPolygon(4u)){
        //
        /*
        | | | |
        | | | |
        | | | |
*/
        /*
        poly.setVertexUV(0u,0.f,0.f);
        poly.setVertexPosition(0u,-0.5f*size.width,-0.5f*size.height);
        poly.setVertexUV(1u,0.f,1.f);
        poly.setVertexPosition(1u,-0.5f*size.width,+0.5f*size.height);
        poly.setVertexUV(2u,1.f,1.f);
        poly.setVertexPosition(2u,+0.5f*size.width,+0.5f*size.height);
        poly.setVertexUV(3u,1.f,0.f);
        poly.setVertexPosition(3u,+0.5f*size.width,-0.5f*size.height);
        this->mesh.addPolygon(poly);
        */
        /*
        |x| | |
        | | | |
        | | | |
*/
        poly.setVertexUV(0u,0.f,0.495f);
        poly.setVertexPosition(0u,-0.5f*size.width,(+0.5f*size.height) - this->border);
        poly.setVertexUV(1u,0.f,0.f);
        poly.setVertexPosition(1u,-0.5f*size.width,+0.5f*size.height);
        poly.setVertexUV(2u,0.495f,0.f);
        poly.setVertexPosition(2u,(-0.5f*size.width)+this->border,+0.5f*size.height);
        poly.setVertexUV(3u,0.495f,0.495f);
        poly.setVertexPosition(3u,(-0.5f*size.width)+this->border,(+0.5f*size.height) - this->border);
        poly.setPolygonColor(1.f,1.f,1.f,1.0f);
        this->mesh.addPolygon(poly);
        /*
        | | |x|
        | | | |
        | | | |
*/
        poly.setVertexUV(0u,0.505f,0.495f);
        poly.setVertexPosition(0u,(+0.5f*size.width)-this->border,(+0.5f*size.height)-this->border);
        poly.setVertexUV(1u,0.505f,0.f);
        poly.setVertexPosition(1u,(+0.5f*size.width)-this->border,+0.5f*size.height);
        poly.setVertexUV(2u,1.f,0.f);
        poly.setVertexPosition(2u,+0.5f*size.width,+0.5f*size.height);
        poly.setVertexUV(3u,1.f,0.495f);
        poly.setVertexPosition(3u,+0.5f*size.width,(+0.5f*size.height)-this->border);
        poly.setPolygonColor(1.f,1.f,1.f,1.0f);
        this->mesh.addPolygon(poly);
        /*
        | | | |
        | | | |
        | | |x|
*/
        poly.setVertexUV(0u,0.505f,1.f);
        poly.setVertexPosition(0u,(+0.5f*size.width)-this->border,-0.5f*size.height);
        poly.setVertexUV(1u,0.505f,0.505f);
        poly.setVertexPosition(1u,(+0.5f*size.width)-this->border,(-0.5f*size.height)+this->border);
        poly.setVertexUV(2u,1.f,0.505f);
        poly.setVertexPosition(2u,+0.5f*size.width,(-0.5f*size.height)+this->border);
        poly.setVertexUV(3u,1.f,1.f);
        poly.setVertexPosition(3u,+0.5f*size.width,-0.5f*size.height);
        poly.setPolygonColor(1.f,1.f,1.f,1.0f);
        this->mesh.addPolygon(poly);
        /*
        | | | |
        | | | |
        |x| | |
*/
        poly.setVertexUV(0u,0.f,1.f);
        poly.setVertexPosition(0u,-0.5f*size.width,-0.5f*size.height);
        poly.setVertexUV(1u,0.f,0.505f);
        poly.setVertexPosition(1u,-0.5f*size.width,(-0.5f*size.height)+this->border);
        poly.setVertexUV(2u,0.495f,0.505f);
        poly.setVertexPosition(2u,(-0.5f*size.width)+this->border,(-0.5f*size.height)+this->border);
        poly.setVertexUV(3u,0.495f,1.f);
        poly.setVertexPosition(3u,(-0.5f*size.width)+this->border,-0.5f*size.height);
        poly.setPolygonColor(1.f,1.f,1.f,1.0f);
        this->mesh.addPolygon(poly);
        /*
        | | | |
        |x| | |
        | | | |
*/
        poly.setVertexUV(0u,0.f,0.495f);
        poly.setVertexPosition(0u,-0.5f*size.width,(-0.5f*size.height)+this->border);
        poly.setVertexUV(1u,0.f,0.505f);
        poly.setVertexPosition(1u,-0.5f*size.width,(+0.5f*size.height)-this->border);
        poly.setVertexUV(2u,0.495f,0.505f);
        poly.setVertexPosition(2u,(-0.5f*size.width)+this->border,(+0.5f*size.height)-this->border);
        poly.setVertexUV(3u,0.495f,0.495f);
        poly.setVertexPosition(3u,(-0.5f*size.width)+this->border,(-0.5f*size.height)+this->border);
        poly.setPolygonColor(1.f,1.f,1.f,1.0f);
        this->mesh.addPolygon(poly);
        /*
        | | | |
        | | |x|
        | | | |
*/
        poly.setVertexUV(0u,0.505f,0.495f);
        poly.setVertexPosition(0u,(+0.5f*size.width)-this->border,(-0.5f*size.height)+this->border);
        poly.setVertexUV(1u,0.505f,0.505f);
        poly.setVertexPosition(1u,(+0.5f*size.width)-this->border,(+0.5f*size.height)-this->border);
        poly.setVertexUV(2u,1.f,0.505f);
        poly.setVertexPosition(2u,+0.5f*size.width,(+0.5f*size.height)-this->border);
        poly.setVertexUV(3u,1.f,0.495f);
        poly.setVertexPosition(3u,+0.5f*size.width,(-0.5f*size.height)+this->border);
        poly.setPolygonColor(1.f,1.f,1.f,1.0f);
        this->mesh.addPolygon(poly);
        /*
        | |x| |
        | | | |
        | | | |
*/
        poly.setVertexUV(0u,0.495f,0.f);
        poly.setVertexPosition(0u,(-0.5f*size.width)+this->border,+0.5f*size.height);
        poly.setVertexUV(1u,0.495f,0.495f);
        poly.setVertexPosition(1u,(-0.5f*size.width)+this->border,(+0.5f*size.height)-this->border);
        poly.setVertexUV(2u,0.505f,0.495f);
        poly.setVertexPosition(2u,(+0.5f*size.width)-this->border,(+0.5f*size.height)-this->border);
        poly.setVertexUV(3u,0.505f,0.f);
        poly.setVertexPosition(3u,(+0.5f*size.width)-this->border,+0.5f*size.height);
        poly.setPolygonColor(1.f,1.f,1.f,1.0f);
        this->mesh.addPolygon(poly);
        /*
        | | | |
        | | | |
        | |x| |
*/
        poly.setVertexUV(0u,0.495f,0.505f);
        poly.setVertexPosition(0u,(-0.5f*size.width)+this->border,(-0.5f*size.height)+this->border);
        poly.setVertexUV(1u,0.495f,1.f);
        poly.setVertexPosition(1u,(-0.5f*size.width)+this->border,-0.5f*size.height);
        poly.setVertexUV(2u,0.505f,1.f);
        poly.setVertexPosition(2u,(+0.5f*size.width)-this->border,-0.5f*size.height);
        poly.setVertexUV(3u,0.505f,0.505f);
        poly.setVertexPosition(3u,(+0.5f*size.width)-this->border,(-0.5f*size.height)+this->border);
        poly.setPolygonColor(1.f,1.f,1.f,1.0f);
        this->mesh.addPolygon(poly);
        /*
        | | | |
        | |x| |
        | | | |
*/
        poly.setVertexUV(0u,0.495f,0.495f);
        poly.setVertexPosition(0u,(-0.5f*size.width)+this->border,(+0.5f*size.height)-this->border);
        poly.setVertexUV(1u,0.495f,0.505f);
        poly.setVertexPosition(1u,(-0.5f*size.width)+this->border,(-0.5f*size.height)+this->border);
        poly.setVertexUV(2u,0.505f,0.505f);
        poly.setVertexPosition(2u,(+0.5f*size.width)-this->border,(-0.5f*size.height)+this->border);
        poly.setVertexUV(3u,0.505f,0.495f);
        poly.setVertexPosition(3u,(+0.5f*size.width)-this->border,(+0.5f*size.height)-this->border);
        poly.setPolygonColor(1.f,1.f,1.f,1.0f);
        this->mesh.addPolygon(poly);

        //update the center
        this->center.setVertexPosition(0u,(-0.5f*size.width)+this->border,(+0.5f*size.height)-this->border);
        this->center.setVertexPosition(1u,(+0.5f*size.width)-this->border,(-0.5f*size.height)+this->border);

        //update the selection
        this->selection.setVertexPosition(0u,-0.5f*size.width,+0.5f*size.height);
        this->selection.setVertexPosition(1u,+0.5f*size.width,-0.5f*size.height);

        if(this->mesh.getPolygonSize()){
            //
            //this->mesh.setPolygonsColor(1,0,0,1);

            //this->mesh.material.setEmission(1,0,0,1);

            return true;
        }
    }
    return false;
}

//set the borderSize
bool edk::gui2d::ObjectGui2dBorder::setBorderSize(edk::float32 size){
    bool ret = true;
    //filter the size
    if(size<0.f){
        size=0.f;
        ret = false;
    }
    if(size>1.f){
        size=1.f;
        ret = false;
    }
    this->border = size;
    return ret;
}
edk::float32 edk::gui2d::ObjectGui2dBorder::getBorderSize(){
    return this->border;
}

//return the center rectangle
edk::shape::Rectangle2D* edk::gui2d::ObjectGui2dBorder::getCenter(){
    return &this->center;
}

//load the objectBorder
bool edk::gui2d::ObjectGui2dBorder::load(edk::size2f32 size){
    //unload the mesh
    this->unload();

    //load the polygons
    if(this->updatePolygons(size)){
        //return true;
        //load the textures
        if(this->mesh.material.loadTextureFromMemory(EDKButtonNormalTemplateName,EDKButtonNormalTemplate,EDKButtonNormalTemplateSize,edk::gui2d::gui2dTextureNormal)){
            if(this->mesh.material.loadTextureFromMemory(EDKButtonUpTemplateName,EDKButtonUpTemplate,EDKButtonUpTemplateSize,edk::gui2d::gui2dTextureUp)){
                if(this->mesh.material.loadTextureFromMemory(EDKButtonPressedTemplateName,EDKButtonPressedTemplate,EDKButtonPressedTemplateSize,edk::gui2d::gui2dTexturePressed)){
                    if(this->mesh.material.loadTextureFromMemory(EDKButtonPressedUpTemplateName,EDKButtonPressedUpTemplate,EDKButtonPressedUpTemplateSize,edk::gui2d::gui2dTexturePressedUp)){
                        //return true
                        return true;
                    }
                }
            }
        }
    }

    this->unload();
    return false;
}
//unload the objectBorder
void edk::gui2d::ObjectGui2dBorder::unload(){
    this->mesh.cleanPolygons();
    this->mesh.cleanTextures();
}

//draw the object
void edk::gui2d::ObjectGui2dBorder::drawNormal(){
    this->mesh.drawOneTexture(gui2dTextureNormal);
}
void edk::gui2d::ObjectGui2dBorder::drawUp(){
    this->mesh.drawOneTexture(edk::gui2d::gui2dTextureUp);
}
void edk::gui2d::ObjectGui2dBorder::drawPressed(){
    this->mesh.drawOneTexture(edk::gui2d::gui2dTexturePressed);
}
void edk::gui2d::ObjectGui2dBorder::drawPressedUp(){
    this->mesh.drawOneTexture(edk::gui2d::gui2dTexturePressedUp);
}
void edk::gui2d::ObjectGui2dBorder::drawSelection(){
    this->selection.draw();
}

